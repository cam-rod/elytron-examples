# Load custom components module
module add --name=org.wildfly.security.examples.custom-principal-elytron-components --resources=/PATH/TO/elytron-examples/custom-principal-elytron/target/custom-principal-elytron-components.jar --dependencies=org.wildfly.security.elytron,org.wildfly.extension.elytron
module add --name=org.wildfly.security.examples.custom-realm --resources=/PATH/TO/elytron-examples/custom-realm/target/custom-realm-2.0.0.Alpha1-SNAPSHOT.jar --dependencies=org.wildfly.security.elytron,org.wildfly.extension.elytron

# Start batching
batch

# Enable a default JACC policy for Elytron -- not applicable in this version
#/subsystem=elytron/policy=jacc:add(jacc-policy={})

# Create security realm and identity
/subsystem=elytron/custom-realm=myRealm:add(module=org.wildfly.security.examples.custom-realm, class-name=org.wildfly.security.examples.MyRealm, configuration={myAttribute="myValue"})

# Add constant role mapper for "Login"
/subsystem=elytron/constant-role-mapper=login-role-mapper:add(roles=[Login])

# Add custom pre-realm principal transformer and post-realm regex rewriter (a type of transformer)
/subsystem=elytron/custom-principal-transformer=customPreRealmTransformer:add(module=org.wildfly.security.examples.custom-principal-elytron-components,class-name=org.wildfly.security.examples.CustomPreRealmTransformer)

# Create security domain, add realms and transformers
/subsystem=elytron/security-domain=principalSecDomain:add(realms=[{realm=myRealm}],default-realm=myRealm,pre-realm-principal-transformer=customPreRealmTransformer,role-mapper=login-role-mapper,permission-mapper=default-permission-mapper)

# Add the security domain factory mapping to Undertow
/subsystem=undertow/application-security-domain=other:write-attribute(name=security-domain, value=principalSecDomain)

# Run batch
run-batch
reload
