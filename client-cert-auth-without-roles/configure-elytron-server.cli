# Batch script to configure mutual(two way) SSL in the JBoss EAP server without roles

# configure a keystore for both the server keystore and truststore
/subsystem=elytron/key-store=twoWayKS:add(path=server.keystore, relative-to=jboss.server.config.dir, credential-reference={clear-text=keystorepass}, type=JKS)
/subsystem=elytron/key-store=twoWayTS:add(path=server.truststore,relative-to=jboss.server.config.dir, credential-reference={clear-text=truststorepass}, type=JKS)


# Configure a key store realm to store the certificates
#/subsystem=elytron/key-store-realm=ksRealm:add(key-store=twoWayTS)


#configure a key manager using the key store
/subsystem=elytron/key-manager=twoWayKM:add(key-store=twoWayKS,credential-reference={clear-text=keystorepass})

#configure a trust manager
/subsystem=elytron/trust-manager=twoWayTM:add(key-store=twoWayTS)


# configure the Server ssl context to connect it to the key manager and the trust manager
/subsystem=elytron/server-ssl-context=applicationSSC:write-attribute(name=key-manager, value=twoWayKM)
/subsystem=elytron/server-ssl-context=applicationSSC:write-attribute(name=trust-manager, value=twoWayTM)
/subsystem=elytron/server-ssl-context=applicationSSC:write-attribute(name=need-client-auth, value=true)
/subsystem=elytron/server-ssl-context=applicationSSC:write-attribute(name=want-client-auth, value=true)

#add the keystore Realm onto the constant realm mapper
#/subsystem=elytron/constant-realm-mapper=constksRealm:add(realm-name=ksRealm)

# Obtain CN value from X.509 certificate subject name
/subsystem=elytron/x500-attribute-principal-decoder=cnDecoder:add(attribute-name=CN, maximum-segments=1)

# Configure a security domain	
#/subsystem=elytron/security-domain=clientCertDomain:add(realms=[{realm=ksRealm}], default-realm=ksRealm, permission-mapper=default-permission-mapper,  principal-decoder=cnDecoder)
/subsystem=elytron/security-domain=clientCertDomain:add(permission-mapper=default-permission-mapper,  principal-decoder=cnDecoder)

# Configure the CLIENT_CERT HTTP mechanism on elytron
/subsystem=elytron/configurable-http-server-mechanism-factory=configuredCert:add(http-server-mechanism-factory=global, properties={org.wildfly.security.http.skip-certificate-verification=true})
/subsystem=elytron/http-authentication-factory=clientCertAuth:add(http-server-mechanism-factory=configuredCert, security-domain=clientCertDomain , mechanism-configurations=[{mechanism-name=CLIENT_CERT}])

batch
#configure the undertow subsystem	
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=ssl-context, value=applicationSSC)
/subsystem=undertow/application-security-domain=other:undefine-attribute(name=security-domain)
/subsystem=undertow/application-security-domain=other:write-attribute(name=http-authentication-factory,value=clientCertAuth)
/subsystem=undertow/application-security-domain=other:write-attribute(name=override-deployment-config,value=true)
run-batch

reload
